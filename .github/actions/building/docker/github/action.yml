# github.yml 
name: building_docker_github
description: ''

inputs:
  token:
    description: "GitHub Token used to authenticate against a repository for Git context."
    required: true
    default: '' 
  context:
    description: "Build's context is the set of files located in the specified PATH or URL (default Git context)"
    required: false
    default: './'
  file:
    description: "Path to the Dockerfile. (default {context}/Dockerfile)"
    required: false
    default: './Dockerfile'
  buildkit:
    description: "Enable docker buildkit"
    required: false
    default: "false"

runs:
  using: composite
  env:
    DOCKER_BUILDKIT: 0    
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
             
    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: 'ghcr.io' 
        username: ${{ github.actor }}
        password: ${{ inputs.token }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        #flavor: |
        #  latest=false
          
    - name: Build Docker image
      shell: bash
      working-directory: "${{ inputs.context }}"
      if: ${{ inputs.buildkit == 'false' }}
      #env:
      #  DOCKER_BUILDKIT: 0
      run: |
        tags="$(echo "${{ steps.meta.outputs.json }}")"
        tag_semver=$(echo "$tags" | head -n 1)
        echo "${tag_semver}"
        
        tag_latest=$(echo "$tags" | head -n 2)
        echo "${tag_latest}"
        
        docker build -t "${tag_semver}" -f ./Dockerfile .
        docker tag "${tag_semver}" "${tag_latest}"
        
        docker push "${tag_semver}"
        docker push "${tag_latest}"
        
#    - name: Build and push Docker image
#      uses: docker/build-push-action@v6
#      with:
#        no-cache: true
#        context: ${{ inputs.context }}
#        file: ${{ inputs.file }}
#        push: true
#        tags: ${{ steps.meta.outputs.tags }}
#        labels: ${{ steps.meta.outputs.labels }}
